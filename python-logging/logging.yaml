version: 1
disable_existing_loggers: false

filters:
  tenant_filter:
    # Provides %(service)s and %(tenant)s
    name: tenant filter
    (): ma.log.ServiceMetadataFilter

formatters:
  console:
    (): ma.log.TenantLogFormatter
    format: '%(asctime)s %(name)-12s tenant=%(tenant)s %(process)d %(levelname)s - %(message)s'
    datefmt: '%Y-%m-%d %H:%M:%S'
  gunicorn_console:
    format: '%(message)s'
  gunicorn_syslog:
    (): ma.log.UdpSyslogFormatter
    format: '%(message)s'
  syslog:
    (): ma.log.UdpSyslogFormatter
    format: '%(name)s %(levelname)s %(message)s'

handlers:
  console:
    class: logging.StreamHandler
    formatter: console
    filters: [tenant_filter]
    stream: ext://sys.stderr
  gunicorn_console:
    class: logging.StreamHandler
    formatter: gunicorn_console
    filters: [tenant_filter]
    stream: ext://sys.stderr
  gunicorn_syslog:
    class: logging.handlers.SysLogHandler
    formatter: gunicorn_syslog
    filters: [tenant_filter]
  syslog:
    class: logging.handlers.SysLogHandler
    formatter: syslog
    filters: [tenant_filter]
    level: INFO

loggers:
  amqp:
    level: WARNING
  amqplib:
    level: WARNING
  boto:
    level: WARNING
  CSSUTILS:
    level: ERROR
  gunicorn.access:
    handlers: [gunicorn_console, gunicorn_syslog]
    level: INFO
    propagate: False
  requests:
    level: WARNING

root:
  level: DEBUG
  handlers: [console, syslog]
